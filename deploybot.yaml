version: '1.0'

deployments:
  production:
    server: ssh://${DEPLOY_USER}@${PRODUCTION_SERVER}
    branch: main
    commands:
      pre:
        - echo "Starting production deployment" >> /var/log/deploy.log
        - set -e  # Ensure deployment stops on errors

      deploy:
        - rsync -avz --delete ./ user@production-server:/var/www/html/  # Sync files
        - ssh user@production-server "cd /var/www/html && pip install -r requirements.txt"  # Install Python dependencies
        - ssh user@production-server "cd /var/www/html && go build raja.go"  # Build Go application

      post:
        - ssh user@production-server "cd /var/www/html && python3 d.py"  # Run Python script
        - chmod -R 755 /var/www/html
        - chown -R www-data:www-data /var/www/html
        - echo "Production deployment complete" >> /var/log/deploy.log

  staging:
    server: ssh://${DEPLOY_USER}@${STAGING_SERVER}
    branch: develop
    commands:
      deploy:
        - rsync -avz --delete ./ user@staging-server:/var/www/html/  # Sync files
        - ssh user@staging-server "cd /var/www/html && pip install -r requirements.txt"  # Install Python dependencies
        - ssh user@staging-server "cd /var/www/html && go build raja.go"  # Build Go application
      post:
        - ssh user@staging-server "cd /var/www/html && python3 d.py"  # Run Python script
        - echo "Staging deployment complete" >> /var/log/deploy.log
